diff a/src/CoraEngineGame/main.cpp b/src/CoraEngineGame/main.cpp	(rejected hunks)
@@ -1,82 +1,58 @@
 #include <iostream>
 #include <CoraEngineLibrarie/Window.hpp>
 #include <CoraEngineLibrarie/Global.hpp>
 #include  <CoraEngineLibrarie/Player.hpp>
 #include  <CoraEngineLibrarie/TextureManager.hpp>
 
 
 int main()
 {
 	std::cout << "Welcome to Fantasy Zone Get Ready !" << std::endl;
 	Window mapWindow(HEIGHTSCREEN, HEIGHTSCREEN, "Map");
 	mapWindow.GetHandle()->setPosition({ mapWindow.GetHandle()->getPosition() / 6 });
 	mapWindow.SetFrameRate(144);
 	mapWindow.SetVerticalSyncEnable(true);
 	Window window(WIDTHSCREEN, HEIGHTSCREEN, "Cora Engine (Ou Cassoulet Engine 2 why not)");
 	window.SetFrameRate(144);
 	window.SetVerticalSyncEnable(true);
 	window.SetMouseCursorVisible(false);
 
 	Fonts fonts;
 	TextureManager FloorManager("Floor");
 	TextureManager WallManager("Wall");
 	Map map;
 	Player player(window ,WallManager,FloorManager,map);
 
 	map.SpawnPlayerOnMap(player);
 
 
 	while (window.isOpen())
 	{
 		sf::IntRect WindowRect(window.GetHandle()->getPosition(), static_cast<sf::Vector2i>(window.GetSize()));
 		sf::Event event;
 		while (window.PollEvent(event))
 		{
 			if (event.type == sf::Event::Closed)
 				window.Close();
 		}
 		if (sf::Keyboard::isKeyPressed(sf::Keyboard::Escape))
 		{
 			player.SetMouse(false);
 		}
 		if (WindowRect.contains(sf::Mouse::getPosition()) & sf::Mouse::isButtonPressed(sf::Mouse::Right))
 		{
 			player.SetMouse(true);
 		}
-
-		//for (unsigned short a = 0; a < ceil(blockSize * xCase / static_cast<float>(blockSize)); a++)
-		//{
-		//	for (unsigned short b = 0; b < ceil(blockSize * yCase / static_cast<float>(blockSize)); b++)
-		//	{
-		//		map_grid_cell_sprite.setPosition(static_cast<float>(blockSize * a), static_cast<float>(blockSize * b));
-
-		//		window.GetHandle()->draw(map_grid_cell_sprite);
-		//	}
-		//}
-
-		//for (unsigned short a = 0; a < xCase; a++)
-		//{
-		//	for (unsigned short b = 0; b < yCase; b++)
-		//	{
-		//		if (map.GetCell(a,b) == Wall)
-		//		{
-		//			map_wall_sprite.setPosition(static_cast<float>(blockSize * a), static_cast<float>(blockSize * b));
-
-		//			window.GetHandle()->draw(map_wall_sprite);
-		//		}
-		//	}
-		//}
-
 		player.Update();
 		window.Clear(sf::Color::Cyan);
 		mapWindow.Clear();
 
 		map.Draw(mapWindow,WallManager.GetTexture(0),FloorManager.GetTexture(0) );
 		player.Draw(mapWindow);
 
 
 		window.Display();
 		mapWindow.Display();
 	}
 	return 0;
 };
